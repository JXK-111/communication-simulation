import numpy as np
import matplotlib.pyplot as plt

Nr = 4
constellation_num = 3

if constellation_num == 1:
    constellaion_name = 'QPSK'
elif constellation_num == 2:
    constellaion_name = '16QAM'
elif constellation_num == 3:
    constellaion_name = '64QAM'

if Nr == 2:
    if constellaion_name == 'QPSK':
        snr = [3.010299956639812 ,5.0102999566398125, 7.0102999566398125, 9.010299956639813, 11.010299956639813 ,13.010299956639813, 15.010299956639813, 17.010299956639813, 19.010299956639813 ,21.010299956639813 ,23.010299956639813 ,25.010299956639813 ,27.010299956639813  ]
    if constellaion_name == '16QAM':
        snr = [3.010299956639812, 5.5102999566398125, 8.010299956639813, 10.510299956639813, 13.010299956639813, 15.510299956639813, 18.010299956639813, 20.510299956639813, 23.010299956639813, 25.510299956639813, 28.010299956639813, 30.510299956639813, 33.01029995663981  ]
    if constellaion_name == '64QAM':
        snr = [3.010299956639812, 6.0102999566398125, 9.010299956639813, 12.010299956639813, 15.010299956639813 ,18.010299956639813, 21.010299956639813, 24.010299956639813 ,27.010299956639813 ,30.010299956639813 ,33.01029995663981 ,36.01029995663981 ,39.01029995663981 ]
elif Nr == 4:
    if constellaion_name == 'QPSK':
        snr =  [0.0, 1.5, 3.0, 4.5, 6.0, 7.5, 9.0, 10.5, 12.0, 13.5, 15.0, 16.5, 18.0]
    if constellaion_name == '16QAM':
        snr = [0.0 ,1.9 ,3.8 ,5.699999999999999 ,7.6 ,9.5 ,11.399999999999999, 13.299999999999999, 15.2, 17.099999999999998, 19.0, 20.9 ,22.799999999999997 ]
    if constellaion_name == '64QAM':
        snr = [0.0, 2.3, 4.6, 6.8999999999999995, 9.2, 11.5, 13.799999999999999, 16.099999999999998, 18.4, 20.7, 23.0, 25.299999999999997, 27.599999999999998]


ber1 = [0.305609 ,0.27237008333333335 ,0.23613075 ,0.198882375 ,0.15919829166666666 ,0.115549875 ,0.07153616666666666 ,0.037653958333333334 ,0.018466791666666666 ,0.009824875 ,0.00563 ,0.0032352916666666667 ,0.0019267083333333334 ]
plt.semilogy(snr,ber1,marker = 'o',label='branch=[2,2,4,4,4,4,8,8]'.format(constellaion_name))
ber1 = [0.30390554166666667 ,0.2705845416666667 ,0.235149875 ,0.19794625 ,0.158505875 ,0.1149985 ,0.07125925 ,0.037062625 ,0.0182235 ,0.009613041666666667 ,0.005561583333333333 ,0.003311 ,0.0019079583333333333 ]
plt.semilogy(snr,ber1,marker = 'o',label='branch=[2,2,4,4,6,6,8,8]'.format(constellaion_name))
ber1 = [0.3036313333333333 ,0.2703335416666667 ,0.23475095833333334 ,0.19782591666666666 ,0.15866016666666666 ,0.114990625 ,0.071178125 ,0.03705329166666667 ,0.01821375 ,0.009759 ,0.005460875 ,0.0033012083333333335 ,0.0019268333333333333 ]
plt.semilogy(snr,ber1,marker = 'o',label='branch=[2,2,4,4,8,8,8,8]'.format(constellaion_name))
ber1 = [0.29564616666666665 ,0.26332125 ,0.22864583333333333 ,0.19230045833333334 ,0.1533575 ,0.10961708333333334 ,0.06402658333333333 ,0.028693541666666666 ,0.010616416666666666 ,0.004107375 ,0.002007708333333333 ,0.00112775 ,0.0006439166666666667 ]
plt.semilogy(snr,ber1,marker = 'o',label='branch=[4,4,4,4,8,8,8,8]'.format(constellaion_name))
#ber1 = [0.2943562083333333 ,0.262225375 ,0.22745358333333332 ,0.1915905 ,0.15289895833333333 ,0.10895083333333333 ,0.06311854166666667 ,0.027979916666666667 ,0.009952125 ,0.003642166666666667 ,0.0016435416666666666 ,0.0008979583333333333 ,0.0005134166666666667 ]
#plt.semilogy(snr,ber1,marker = 'o',label='SD-BF-soft(5)'.format(constellaion_name))
#ber1 = [0.292627375 ,0.2601807916666667 ,0.22551129166666667 ,0.18962991666666668 ,0.15154983333333333 ,0.10752204166666667 ,0.06168133333333333 ,0.026359083333333335 ,0.008503916666666667 ,0.002595333333333333 ,0.0009639166666666666 ,0.00050525 ,0.00027920833333333335 ]
#plt.semilogy(snr,ber1,marker = 'o',label='SD-BF-soft(6)'.format(constellaion_name))
#ber1 = [0.289774875 ,0.25783416666666664 ,0.22366033333333332 ,0.18830720833333334 ,0.15029758333333335 ,0.10677170833333334 ,0.060620208333333335 ,0.025385625 ,0.0075825833333333335 ,0.0018884583333333334 ,0.0005450833333333333 ,0.00021470833333333333 ,0.000114625 ]
#plt.semilogy(snr,ber1,marker = 'o',label='SD-BF-soft(7)'.format(constellaion_name))
#ber1 = [0.29009775 ,0.2577302083333333 ,0.223607 ,0.18814529166666666 ,0.150051125 ,0.1063585 ,0.060393583333333334 ,0.024689833333333334 ,0.006986 ,0.001394 ,0.00022591666666666667 ,3.1416666666666666e-05 ,3.8416666666666665e-06 ]
#plt.semilogy(snr,ber1,marker = 'o',label='SD-BF-soft(8)'.format(constellaion_name))



if Nr == 2:
    if constellaion_name == 'QPSK':
        ber = [0.08698105, 0.05292785, 0.029031225, 0.01455505, 0.006733625 ,0.002981925 ,0.00126145 ,0.000511875, 0.0002136 ,8.385e-05 ,3.3725e-05, 1.4225e-05, 5.9e-06 ]
    if constellaion_name == '16QAM':
        ber = [0.1686901625, 0.1186008875, 0.0733288, 0.039247575 ,0.018208725, 0.0074320375, 0.0027901125, 0.0009668875, 0.0003223875 ,0.0001040875, 3.46e-05, 1.03375e-05 ,3.15e-06  ]
    if constellaion_name == '64QAM':
        ber = [0.22451341666666666, 0.17355816666666668 ,0.12235333333333333 ,0.07435666666666667, 0.03724375 ,0.015678166666666667, 0.005537916666666667, 0.00178375 ,0.0005044166666666667 ,0.00014083333333333333 ,3.316666666666667e-05 ,8e-06 ,2.1666666666666665e-06 ]
elif Nr == 4:
    if constellaion_name == 'QPSK':
        ber = [0.15562665, 0.118460475, 0.0818836, 0.050323425, 0.02690375, 0.0124315, 0.004925775, 0.00175935, 0.0005531, 0.000163975, 4.89e-05, 1.33e-05, 3.625e-06]
    if constellaion_name == '16QAM':
        ber = [0.243578375, 0.20886575 ,0.1720089375, 0.1315284375, 0.0884094375, 0.0490300625 ,0.021343375, 0.007176 ,0.001872875 ,0.0004275, 8.33125e-05 ,1.625e-05, 3.1375e-06 ]
    if constellaion_name == '64QAM':
        ber = [0.29009775 ,0.2577302083333333, 0.223607, 0.18814529166666666, 0.150051125, 0.1063585 ,0.060393583333333334 ,0.024689833333333334 ,0.006986 ,0.001384, 0.00021391666666666667, 2.9416666666666666e-05, 3.5416666666666665e-06 ]
plt.semilogy(snr,ber,marker = 'o',label='ML detection')
ticks = [0] * 20
for i in range(20):
    ticks[i] = 2 * i
plt.xticks(ticks)
plt.xlim(min(snr) - 1, max(snr) + 1)
plt.xlabel('Eb/No , dB')
plt.ylabel('ber')
plt.grid(True, which='both')
plt.legend()
plt.show()