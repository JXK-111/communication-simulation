import numpy as np
import matplotlib.pyplot as plt

Nr = 2
constellation_num = 3

if constellation_num == 1:
    constellaion_name = 'QPSK'
elif constellation_num == 2:
    constellaion_name = '16QAM'
elif constellation_num == 3:
    constellaion_name = '64QAM'

if Nr == 2:
    if constellaion_name == 'QPSK':
        snr = [3.010299956639812 ,5.0102999566398125, 7.0102999566398125, 9.010299956639813, 11.010299956639813 ,13.010299956639813, 15.010299956639813, 17.010299956639813, 19.010299956639813 ,21.010299956639813 ,23.010299956639813 ,25.010299956639813 ,27.010299956639813  ]
    if constellaion_name == '16QAM':
        snr = [3.010299956639812, 5.5102999566398125, 8.010299956639813, 10.510299956639813, 13.010299956639813, 15.510299956639813, 18.010299956639813, 20.510299956639813, 23.010299956639813, 25.510299956639813, 28.010299956639813, 30.510299956639813, 33.01029995663981  ]
    if constellaion_name == '64QAM':
        snr = [3.010299956639812, 6.0102999566398125, 9.010299956639813, 12.010299956639813, 15.010299956639813 ,18.010299956639813, 21.010299956639813, 24.010299956639813 ,27.010299956639813 ,30.010299956639813 ,33.01029995663981 ,36.01029995663981 ,39.01029995663981 ]
elif Nr == 4:
    if constellaion_name == 'QPSK':
        snr =  [0.0, 1.5, 3.0, 4.5, 6.0, 7.5, 9.0, 10.5, 12.0, 13.5, 15.0, 16.5, 18.0]
    if constellaion_name == '16QAM':
        snr = [0.0 ,1.9 ,3.8 ,5.699999999999999 ,7.6 ,9.5 ,11.399999999999999, 13.299999999999999, 15.2, 17.099999999999998, 19.0, 20.9 ,22.799999999999997 ]
    if constellaion_name == '64QAM':
        snr = [0.0, 2.3, 4.6, 6.8999999999999995, 9.2, 11.5, 13.799999999999999, 16.099999999999998, 18.4, 20.7, 23.0, 25.299999999999997, 27.599999999999998]

visit1 = [188.7827944 ,161.9755486 ,143.8885136 ,128.5447496 ,114.0929524 ,102.3381392 ,94.3338474 ,89.5363114 ,86.9524722 ,85.6247982 ,84.9355234 ,84.6004754 ,84.4267362]
plt.plot(snr,visit1,marker = 'o',label='branch=[2,4,4,8]'.format(constellaion_name))
visit1 = [211.286594 ,180.3017694 ,160.0839473 ,142.9431491 ,126.918692 ,113.6304559 ,104.6424187 ,99.218712 ,96.2861105 ,94.700502 ,93.9215143 ,93.5165227 ,93.312985   ]
plt.plot(snr,visit1,marker = 'o',label='branch=[2,4,6,8]'.format(constellaion_name))
visit1 = [193.2291009 ,167.865957 ,150.7537787 ,135.6346588 ,121.081453 ,109.1276843 ,100.9189787 ,95.997601 ,93.3192942 ,91.9136113 ,91.1976439 ,90.842757 ,90.6685741 ]
plt.plot(snr,visit1,marker = 'o',label='branch=[2,2,8,8]'.format(constellaion_name))
visit1 = [232.1644557 ,198.5078281 ,176.7066379 ,157.8563433 ,140.1290059 ,125.5775407 ,115.5488505 ,109.5092851 ,106.1489223 ,104.4185532 ,103.5107642 ,103.0599355 ,102.8428917 ]
plt.plot(snr,visit1,marker = 'o',label='branch=[2,4,8,8]'.format(constellaion_name))


ticks = [0] * 20
for i in range(20):
    ticks[i] = 2 * i
plt.xticks(ticks)
plt.xlim(min(snr) - 1, max(snr) + 1)

plt.xlabel('Eb/No , dB')
plt.ylabel('Addition complexity')
plt.grid(True, which='both')
plt.legend()
plt.show()